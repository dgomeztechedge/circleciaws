# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

executors:
  my-executor:
    docker:
      - image: lakoo/node-gcloud-docker
    working_directory: /tmp/books

jobs:
  build:
    executor: my-executor

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      # - run: curl -sL https://deb.nodesource.com/setup_6.x | bash -
      # - run: apt-get install -y nodejs
      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - persist_to_workspace:
          root: ./
          paths:
            - ./*

  test:
    executor: my-executor
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/books
      - run: npm test
      - store_artifacts:
          path: test-results.xml
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage

  deploy-staging:
    working_directory: ~/tmp/books
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: /tmp/books
      - run:
          name: Load docker image from cache
          command: docker load --input docker-cache/built-image.tar
      - run:
          name: Auth gCloud SDK
          command: bash ./deploy/gcloud-auth.sh
      - run:
          name: tag docker image with latest
          command: docker tag asia.gcr.io/${PROJECT}/${DOCKER_IMAGE}:$CIRCLE_SHA1 asia.gcr.io/${PROJECT}/${DOCKER_IMAGE}:latest
      - run:
          name: Running staging.sh
          command: bash ./deploy/staging.sh
workflows:
  version: 2
  build_and_test: # name of your workflow
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy-staging:
          requires:
            - test
